# Owner side is always child, shouldn't propogate changes to parent (no javax.persistence.CascadeType.ALL).
# Everything is javax.persistence.FetchType.EAGER because it will definitely work that way in code; for efficiency, can optimize later by removing eager fetch type.
# Many of the annotations are not needed as they are the default behavior. They are added anyway to facilitate changing the values from defaults if desired.

# %0:Entity class of referencing Type, located in owning entity.
# %1:referencing type instance variable, located in owning entity.
# %4pk:primary key variable of referencing Type.
# %5pksql: sql case
# %6opksql: sql case, the primary key other than the %4pk one.
# %2:Entity class of owning Type, located in referencing entity.
# %3:owning type instance variable, located in referencing entity.

ONE_TO_ONE_OWNER=    @javax.persistence.OneToOne( fetch = javax.persistence.FetchType.EAGER )^    @javax.persistence.JoinColumn( name = "%5pksql", referencedColumnName = "%4pk" )^    private %0 %1;
ONE_TO_ONE_REFERENCING=    @javax.persistence.OneToOne( mappedBy = "%1", fetch = javax.persistence.FetchType.EAGER, cascade = javax.persistence.CascadeType.ALL, orphanRemoval = true )^    private %2 %3;

# many to one is the 'many' side, always the owner
MANY_TO_ONE=    @javax.persistence.ManyToOne( fetch = javax.persistence.FetchType.EAGER )^    @javax.persistence.JoinColumn( name = "%5pksql", referencedColumnName = "%4pk" )^    private %0 %1;
# one to many is the 'one' side, always referencing
ONE_TO_MANY=    @javax.persistence.OneToMany( mappedBy="%1", fetch = javax.persistence.FetchType.EAGER, cascade = javax.persistence.CascadeType.ALL, orphanRemoval = true )^    private java.util.Set<%2> %3;

# eager or cascade are not advised here as the relationship connections are too great.
MANY_TO_MANY_OWNER=    @javax.persistence.ManyToMany^    @javax.persistence.JoinTable( ^      name="%1__%3", ^      joinColumns = @javax.persistence.JoinColumn( name = "%6opksql" ), ^      inverseJoinColumns = @javax.persistence.JoinColumn( name = "%5pksql" ) )^    private java.util.Set<%0> %1;
# many2many_owner=    @javax.persistence.ManyToMany^    @javax.persistence.JoinTable( name="%1__%3" )^    private Set<%0> %1;

MANY_TO_MANY_REFERENCING=    @javax.persistence.ManyToMany(mappedBy = "%1")^    private java.util.Set<%2> %3;



